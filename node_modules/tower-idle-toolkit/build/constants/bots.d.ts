/**
 * @constant BOT_UNLOCK_COSTS - Medal costs to unlock each successive bot
 */
export declare const BOT_UNLOCK_COSTS: number[];
/**
 * @type BotUpgrade
 * A BotUpgrade has the format
 * ```ts
 * {
 *   baseValue: number; // value with 0 additional upgrades
 *   medalUpgrades: number; // how many times the stat can be upgraded. This can be different even for the same upgrade on different bots
 *   getValue: (level: number, lab?: number) => number; // specify the level (number of medal upgrades) and the lab level for the appropriate stat (if any, default is 0), and get back the numerical value for the stat
 *   formatValue: (value: number) => string; // converts the value returned by getValue into the English text displayed in game, to generate a label.
 * }
 * ```
 */
export type BotUpgrade = {
    baseValue: number;
    medalUpgrades: number;
    labUpgrades?: number;
    getValue: (level: number, lab?: number) => number;
    formatValue: (value: number) => string;
};
/**
 * @type Bot - A Bot maps the upgrade name to the BotUpgrade format specified previously
 */
export type Bot = {
    [upgrade: string]: Readonly<BotUpgrade> | undefined;
};
/**
 * @constant GOLDEN_BOT - Golden Bot
 */
export declare const GOLDEN_BOT: Readonly<Bot>;
/**
 * @constant AMPLIFY_BOT - Amplify Bot
 */
export declare const AMPLIFY_BOT: Readonly<Bot>;
/**
 * @constant THUNDER_BOT - Thunder Bot
 */
export declare const THUNDER_BOT: Readonly<Bot>;
/**
 * @constant FLAME_BOT - Flame Bot
 */
export declare const FLAME_BOT: Readonly<Bot>;
/**
 * @constant BOTS - All of the available bots as an object mapping their In Game English Name to the config for that bot.
 */
export declare const BOTS: Readonly<{
    'Golden Bot': Readonly<Bot>;
    'Amplify Bot': Readonly<Bot>;
    'Thunder Bot': Readonly<Bot>;
    'Flame Bot': Readonly<Bot>;
}>;
