"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BASE_RAPIDFIRE_DURATION_COST = exports.BASE_RAPIDFIRE_DURATION_QUANTITY = exports.BASE_RAPIDFIRE_DURATION_MAX = exports.BASE_RAPIDFIRE_DURATION_MIN = exports.RAPIDFIRE_CHANCE_WORKSHOP = exports.BASE_RAPIDFIRE_CHANCE_COST = exports.BASE_RAPIDFIRE_CHANCE_QUANTITY = exports.BASE_RAPIDFIRE_CHANCE_MAX = exports.BASE_RAPIDFIRE_CHANCE_MIN = exports.MULTISHOT_TARGETS_WORKSHOP = exports.BASE_MULTISHOT_TARGETS_COST = exports.BASE_MULTISHOT_TARGETS_QUANTITY = exports.BASE_MULTISHOT_TARGETS_MAX = exports.BASE_MULTISHOT_TARGETS_MIN = exports.MULTISHOT_CHANCE_WORKSHOP = exports.BASE_MULTISHOT_CHANCE_COST = exports.BASE_MULTISHOT_CHANCE_QUANTITY = exports.BASE_MULTISHOT_CHANCE_MAX = exports.BASE_MULTISHOT_CHANCE_MIN = exports.DPM_WORKSHOP = exports.BASE_DPM_COST = exports.BASE_DPM_QUANTITY = exports.BASE_DPM_MAX = exports.BASE_DPM_MIN = exports.RANGE_WORKSHOP = exports.BASE_RANGE_COST = exports.BASE_RANGE_QUANTITY = exports.BASE_RANGE_MAX = exports.BASE_RANGE_MIN = exports.CRIT_FACTOR_WORKSHOP = exports.BASE_CRIT_FACTOR_COST = exports.BASE_CRIT_FACTOR_QUANTITY = exports.BASE_CRIT_FACTOR_MAX = exports.BASE_CRIT_FACTOR_MIN = exports.CRIT_CHANCE_WORKSHOP = exports.BASE_CRIT_CHANCE_COST = exports.BASE_CRIT_CHANCE_QUANTITY = exports.BASE_CRIT_CHANCE_MAX = exports.BASE_CRIT_CHANCE_MIN = exports.ASPD_WORKSHOP = exports.BASE_ASPD_COST = exports.BASE_ASPD_QUANTITY = exports.BASE_ASPD_MAX = exports.BASE_ASPD_MIN = exports.DAMAGE_WORKSHOP = exports.BASE_DAMAGE_COST = exports.BASE_DAMAGE_QUANTITY = exports.BASE_DAMAGE_MAX = exports.BASE_DAMAGE_MIN = exports.WORKSHOP_LEVELS = void 0;
exports.BASE_DEF_PERCENT_MAX = exports.BASE_DEF_PERCENT_MIN = exports.REGEN_WORKSHOP = exports.BASE_REGEN_COST = exports.BASE_REGEN_QUANTITY = exports.BASE_REGEN_MAX = exports.BASE_REGEN_MIN = exports.HP_WORKSHOP = exports.BASE_HP_COST = exports.BASE_HP_QUANTITY = exports.BASE_HP_MAX = exports.BASE_HP_MIN = exports.ATTACK_UPGRADES = exports.BASE_REND_CAP_MAX = exports.REND_MULT_WORKSHOP = exports.BASE_REND_MULT_COST = exports.BASE_REND_MULT_QUANTITY = exports.BASE_REND_MULT_MAX = exports.BASE_REND_MULT_MIN = exports.REND_CHANCE_WORKSHOP = exports.BASE_REND_CHANCE_COST = exports.BASE_REND_CHANCE_QUANTITY = exports.BASE_REND_CHANCE_MAX = exports.BASE_REND_CHANCE_MIN = exports.SCM_WORKSHOP = exports.BASE_SCM_COST = exports.BASE_SCM_QUANTITY = exports.BASE_SCM_MAX = exports.BASE_SCM_MIN = exports.SCC_WORKSHOP = exports.BASE_SCC_COST = exports.BASE_SCC_QUANTITY = exports.BASE_SCC_MAX = exports.BASE_SCC_MIN = exports.BOUNCE_SHOT_RANGE_WORKSHOP = exports.BASE_BOUNCE_SHOT_RANGE_COST = exports.BASE_BOUNCE_SHOT_RANGE_QUANTITY = exports.BASE_BOUNCE_SHOT_RANGE_MAX = exports.BASE_BOUNCE_SHOT_RANGE_MIN = exports.BOUNCE_SHOT_TARGETS_WORKSHOP = exports.BASE_BOUNCE_SHOT_TARGETS_COST = exports.BASE_BOUNCE_SHOT_TARGETS_QUANTITY = exports.BASE_BOUNCE_SHOT_TARGETS_MAX = exports.BASE_BOUNCE_SHOT_TARGETS_MIN = exports.BOUNCE_SHOT_CHANCE_WORKSHOP = exports.BASE_BOUNCE_SHOT_CHANCE_COST = exports.BASE_BOUNCE_SHOT_CHANCE_QUANTITY = exports.BASE_BOUNCE_SHOT_CHANCE_MAX = exports.BASE_BOUNCE_SHOT_CHANCE_MIN = exports.RAPIDFIRE_DURATION_WORKSHOP = void 0;
exports.BASE_LAND_MINE_CHANCE_MIN = exports.SHOCKWAVE_FREQUENCY_WORKSHOP = exports.BASE_SHOCKWAVE_FREQUENCY_COST = exports.BASE_SHOCKWAVE_FREQUENCY_QUANTITY = exports.BASE_SHOCKWAVE_FREQUENCY_MAX = exports.BASE_SHOCKWAVE_FREQUENCY_MIN = exports.SHOCKWAVE_SIZE_WORKSHOP = exports.BASE_SHOCKWAVE_SIZE_COST = exports.BASE_SHOCKWAVE_SIZE_QUANTITY = exports.BASE_SHOCKWAVE_SIZE_MAX = exports.BASE_SHOCKWAVE_SIZE_MIN = exports.WORKSHOP_ORB_DISTANCE = exports.ORB_QUANTITY_WORKSHOP = exports.BASE_ORB_QUANTITY_COST = exports.BASE_ORB_QUANTITY_QUANTITY = exports.BASE_ORB_QUANTITY_MAX = exports.BASE_ORB_QUANTITY_MIN = exports.ORB_SPEED_WORKSHOP = exports.BASE_ORB_SPEED_COST = exports.BASE_ORB_SPEED_QUANTITY = exports.BASE_ORB_SPEED_MAX = exports.BASE_ORB_SPEED_MIN = exports.KNOCKBACK_FORCE_WORKSHOP = exports.BASE_KNOCKBACK_FORCE_COST = exports.BASE_KNOCKBACK_FORCE_QUANTITY = exports.BASE_KNOCKBACK_FORCE_MAX = exports.BASE_KNOCKBACK_FORCE_MIN = exports.KNOCKBACK_CHANCE_WORKSHOP = exports.BASE_KNOCKBACK_CHANCE_COST = exports.BASE_KNOCKBACK_CHANCE_QUANTITY = exports.BASE_KNOCKBACK_CHANCE_MAX = exports.BASE_KNOCKBACK_CHANCE_MIN = exports.LIFESTEAL_WORKSHOP = exports.BASE_LIFESTEAL_COST = exports.BASE_LIFESTEAL_QUANTITY = exports.BASE_LIFESTEAL_MAX = exports.BASE_LIFESTEAL_MIN = exports.THORN_DAMAGE_WORKSHOP = exports.BASE_THORN_DAMAGE_COST = exports.BASE_THORN_DAMAGE_QUANTITY = exports.BASE_THORN_DAMAGE_MAX = exports.BASE_THORN_DAMAGE_MIN = exports.DEF_ABSOLUTE_WORKSHOP = exports.BASE_DEF_ABSOLUTE_COST = exports.BASE_DEF_ABSOLUTE_QUANTITY = exports.BASE_DEF_ABSOLUTE_MAX = exports.BASE_DEF_ABSOLUTE_MIN = exports.DEF_PERCENT_WORKSHOP = exports.BASE_DEF_PERCENT_COST = exports.BASE_DEF_PERCENT_QUANTITY = void 0;
exports.COINS_PER_WAVE_WORKSHOP = exports.BASE_COINS_PER_WAVE_COST = exports.BASE_COINS_PER_WAVE_QUANTITY = exports.BASE_COINS_PER_WAVE_MAX = exports.BASE_COINS_PER_WAVE_MIN = exports.COINS_PER_KILL_WORKSHOP = exports.BASE_COINS_PER_KILL_COST = exports.BASE_COINS_PER_KILL_QUANTITY = exports.BASE_COINS_PER_KILL_MAX = exports.BASE_COINS_PER_KILL_MIN = exports.CASH_PER_WAVE_WORKSHOP = exports.BASE_CASH_PER_WAVE_COST = exports.BASE_CASH_PER_WAVE_QUANTITY = exports.BASE_CASH_PER_WAVE_MAX = exports.BASE_CASH_PER_WAVE_MIN = exports.CASH_BONUS_WORKSHOP = exports.BASE_CASH_BONUS_COST = exports.BASE_CASH_BONUS_QUANTITY = exports.BASE_CASH_BONUS_MAX = exports.BASE_CASH_BONUS_MIN = exports.DEFENSE_UPGRADES = exports.WALL_REBUILD_WORKSHOP = exports.BASE_WALL_REBUILD_COST = exports.BASE_WALL_REBUILD_QUANTITY = exports.BASE_WALL_REBUILD_MAX = exports.BASE_WALL_REBUILD_MIN = exports.WALL_HEALTH_WORKSHOP = exports.BASE_WALL_HEALTH_COST = exports.BASE_WALL_HEALTH_QUANTITY = exports.BASE_WALL_HEALTH_MAX = exports.BASE_WALL_HEALTH_MIN = exports.DEATH_DEFY_WORKSHOP = exports.BASE_DEATH_DEFY_COST = exports.BASE_DEATH_DEFY_QUANTITY = exports.BASE_DEATH_DEFY_MAX = exports.BASE_DEATH_DEFY_MIN = exports.LAND_MINE_RADIUS_WORKSHOP = exports.BASE_LAND_MINE_RADIUS_COST = exports.BASE_LAND_MINE_RADIUS_QUANTITY = exports.BASE_LAND_MINE_RADIUS_MAX = exports.BASE_LAND_MINE_RADIUS_MIN = exports.LAND_MINE_DAMAGE_WORKSHOP = exports.BASE_LAND_MINE_DAMAGE_COST = exports.BASE_LAND_MINE_DAMAGE_QUANTITY = exports.BASE_LAND_MINE_DAMAGE_MAX = exports.BASE_LAND_MINE_DAMAGE_MIN = exports.LAND_MINE_CHANCE_WORKSHOP = exports.BASE_LAND_MINE_CHANCE_COST = exports.BASE_LAND_MINE_CHANCE_QUANTITY = exports.BASE_LAND_MINE_CHANCE_MAX = void 0;
exports.UTILITY_UNLOCKS = exports.DEFENSE_UNLOCKS = exports.ATTACK_UNLOCKS = exports.WORKSHOP_UPGRADES = exports.UTILITY_UPGRADES = exports.ENEMY_HEALTH_LEVEL_SKIP_WORKSHOP = exports.BASE_ENEMY_HEALTH_LEVEL_SKIP_COST = exports.BASE_ENEMY_HEALTH_LEVEL_SKIP_QUANTITY = exports.BASE_ENEMY_HEALTH_LEVEL_SKIP_MAX = exports.BASE_ENEMY_HEALTH_LEVEL_SKIP_MIN = exports.ENEMY_ATTACK_LEVEL_SKIP_WORKSHOP = exports.BASE_ENEMY_ATTACK_LEVEL_SKIP_COST = exports.BASE_ENEMY_ATTACK_LEVEL_SKIP_QUANTITY = exports.BASE_ENEMY_ATTACK_LEVEL_SKIP_MAX = exports.BASE_ENEMY_ATTACK_LEVEL_SKIP_MIN = exports.RECOVERY_PACKAGE_CHANCE_WORKSHOP = exports.BASE_RECOVERY_PACKAGE_CHANCE_COST = exports.BASE_RECOVERY_PACKAGE_CHANCE_QUANTITY = exports.BASE_RECOVERY_PACKAGE_CHANCE_MAX = exports.BASE_RECOVERY_PACKAGE_CHANCE_MIN = exports.RECOVERY_PACKAGE_MAX_WORKSHOP = exports.BASE_RECOVERY_PACKAGE_MAX_COST = exports.BASE_RECOVERY_PACKAGE_MAX_QUANTITY = exports.BASE_RECOVERY_PACKAGE_MAX_MAX = exports.BASE_RECOVERY_PACKAGE_MAX_MIN = exports.RECOVERY_PACKAGE_AMOUNT_WORKSHOP = exports.BASE_RECOVERY_PACKAGE_AMOUNT_COST = exports.BASE_RECOVERY_PACKAGE_AMOUNT_QUANTITY = exports.BASE_RECOVERY_PACKAGE_AMOUNT_MAX = exports.BASE_RECOVERY_PACKAGE_AMOUNT_MIN = exports.INTEREST_WORKSHOP = exports.BASE_INTEREST_COST = exports.BASE_INTEREST_QUANTITY = exports.BASE_INTEREST_MAX = exports.BASE_INTEREST_MIN = exports.FREE_UTILITY_UPGRADE_WORKSHOP = exports.BASE_FREE_UTILITY_UPGRADE_COST = exports.BASE_FREE_UTILITY_UPGRADE_QUANTITY = exports.BASE_FREE_UTILITY_UPGRADE_MAX = exports.BASE_FREE_UTILITY_UPGRADE_MIN = exports.FREE_DEFENSE_UPGRADE_WORKSHOP = exports.BASE_FREE_DEFENSE_UPGRADE_COST = exports.BASE_FREE_DEFENSE_UPGRADE_QUANTITY = exports.BASE_FREE_DEFENSE_UPGRADE_MAX = exports.BASE_FREE_DEFENSE_UPGRADE_MIN = exports.FREE_ATTACK_UPGRADE_WORKSHOP = exports.BASE_FREE_ATTACK_UPGRADE_COST = exports.BASE_FREE_ATTACK_UPGRADE_QUANTITY = exports.BASE_FREE_ATTACK_UPGRADE_MAX = exports.BASE_FREE_ATTACK_UPGRADE_MIN = void 0;
exports.formatWorkshopValue = exports.maxWorkshopLevel = exports.WORKSHOP_UNLOCKS = void 0;
const workshop_json_1 = __importDefault(require("../data/workshop.json"));
const utils_1 = require("../utils");
/**
 * @constant WORKSHOP_LEVELS - Every workshop level in the game.
 *
 * Format:
 * ```ts
 * {
 *   [Upgrade: string]: {
 *     [level: string]: {
 *       value: number;
 *       cash: number;
 *       coins: number;
 *     }
 *   }
 * }
 * ```
 */
exports.WORKSHOP_LEVELS = workshop_json_1.default;
const COIN = 1;
const K = 1000 * COIN;
const M = 1000 * K;
const B = 1000 * M;
const T = 1000 * B;
const QUAD = 1000 * T;
const QUINT = 1000 * QUAD;
const upgrade = (name, min, max, quantity, cost) => Object.freeze({
    name,
    min,
    max,
    quantity,
    cost,
});
// Attack Tab
exports.BASE_DAMAGE_MIN = 3;
exports.BASE_DAMAGE_MAX = 71114385.08;
exports.BASE_DAMAGE_QUANTITY = 6000;
exports.BASE_DAMAGE_COST = 816.09 * T;
/**
 * @constant DAMAGE_WORKSHOP - Workshop Damage upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.DAMAGE_WORKSHOP = upgrade('Damage', exports.BASE_DAMAGE_MIN, exports.BASE_DAMAGE_MAX, exports.BASE_DAMAGE_QUANTITY, exports.BASE_DAMAGE_COST);
exports.BASE_ASPD_MIN = 1.0;
exports.BASE_ASPD_MAX = 5.95;
exports.BASE_ASPD_QUANTITY = 99;
exports.BASE_ASPD_COST = 3.6 * M;
/**
 * @constant ASPD_WORKSHOP - Workshop Attack Speed upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.ASPD_WORKSHOP = upgrade('Attack Speed', exports.BASE_ASPD_MIN, exports.BASE_ASPD_MAX, exports.BASE_ASPD_QUANTITY, exports.BASE_ASPD_COST);
exports.BASE_CRIT_CHANCE_MIN = 1;
exports.BASE_CRIT_CHANCE_MAX = 80;
exports.BASE_CRIT_CHANCE_QUANTITY = 79;
exports.BASE_CRIT_CHANCE_COST = 1.41 * M;
/**
 * @constant CRIT_CHANCE_WORKSHOP - Workshop Critical Chance upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.CRIT_CHANCE_WORKSHOP = upgrade('Critical Chance', exports.BASE_CRIT_CHANCE_MIN, exports.BASE_CRIT_CHANCE_MAX, exports.BASE_CRIT_CHANCE_QUANTITY, exports.BASE_CRIT_CHANCE_COST);
exports.BASE_CRIT_FACTOR_MIN = 1.2;
exports.BASE_CRIT_FACTOR_MAX = 16.2;
exports.BASE_CRIT_FACTOR_QUANTITY = 150;
exports.BASE_CRIT_FACTOR_COST = 259.2 * B;
/**
 * @constant CRIT_FACTOR_WORKSHOP - Workshop Critical Factor upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.CRIT_FACTOR_WORKSHOP = upgrade('Critical Factor', exports.BASE_CRIT_FACTOR_MIN, exports.BASE_CRIT_FACTOR_MAX, exports.BASE_CRIT_FACTOR_QUANTITY, exports.BASE_CRIT_FACTOR_COST);
exports.BASE_RANGE_MIN = 30;
exports.BASE_RANGE_MAX = 69.5;
exports.BASE_RANGE_QUANTITY = 79;
exports.BASE_RANGE_COST = 1.46 * M;
/**
 * @constant RANGE_WORKSHOP - Workshop Attack Range upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.RANGE_WORKSHOP = upgrade('Range', exports.BASE_RANGE_MIN, exports.BASE_RANGE_MAX, exports.BASE_RANGE_QUANTITY, exports.BASE_RANGE_COST);
exports.BASE_DPM_MIN = 0;
exports.BASE_DPM_MAX = 59;
exports.BASE_DPM_QUANTITY = 200;
exports.BASE_DPM_COST = 316.5 * T;
/**
 * @constant DPM_WORKSHOP - Workshop Damage / Meter upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.DPM_WORKSHOP = upgrade('Damage / Meter', exports.BASE_DPM_MIN, exports.BASE_DPM_MAX, exports.BASE_DPM_QUANTITY, exports.BASE_DPM_COST);
exports.BASE_MULTISHOT_CHANCE_MIN = 0;
exports.BASE_MULTISHOT_CHANCE_MAX = 49.5;
exports.BASE_MULTISHOT_CHANCE_QUANTITY = 99;
exports.BASE_MULTISHOT_CHANCE_COST = 4.26 * M;
/**
 * @constant MULTISHOT_CHANCE_WORKSHOP - Workshop Multishot Chance upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.MULTISHOT_CHANCE_WORKSHOP = upgrade('Multishot Chance', exports.BASE_MULTISHOT_CHANCE_MIN, exports.BASE_MULTISHOT_CHANCE_MAX, exports.BASE_MULTISHOT_CHANCE_QUANTITY, exports.BASE_MULTISHOT_CHANCE_COST);
exports.BASE_MULTISHOT_TARGETS_MIN = 2;
exports.BASE_MULTISHOT_TARGETS_MAX = 9;
exports.BASE_MULTISHOT_TARGETS_QUANTITY = 7;
exports.BASE_MULTISHOT_TARGETS_COST = 529.95 * K;
/**
 * @constant MULTISHOT_TARGETS_WORKSHOP - Workshop Multishot Targets upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.MULTISHOT_TARGETS_WORKSHOP = upgrade('Multishot Targets', exports.BASE_MULTISHOT_TARGETS_MIN, exports.BASE_MULTISHOT_TARGETS_MAX, exports.BASE_MULTISHOT_TARGETS_QUANTITY, exports.BASE_MULTISHOT_TARGETS_COST);
exports.BASE_RAPIDFIRE_CHANCE_MIN = 0;
exports.BASE_RAPIDFIRE_CHANCE_MAX = 34;
exports.BASE_RAPIDFIRE_CHANCE_QUANTITY = 85;
exports.BASE_RAPIDFIRE_CHANCE_COST = 3.23 * M;
/**
 * @constant RAPIDFIRE_CHANCE_WORKSHOP - Workshop Rapidfire Chance upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.RAPIDFIRE_CHANCE_WORKSHOP = upgrade('Rapid Fire Chance', exports.BASE_RAPIDFIRE_CHANCE_MIN, exports.BASE_RAPIDFIRE_CHANCE_MAX, exports.BASE_RAPIDFIRE_CHANCE_QUANTITY, exports.BASE_RAPIDFIRE_CHANCE_COST);
exports.BASE_RAPIDFIRE_DURATION_MIN = 0.6;
exports.BASE_RAPIDFIRE_DURATION_MAX = 5.55;
exports.BASE_RAPIDFIRE_DURATION_QUANTITY = 99;
exports.BASE_RAPIDFIRE_DURATION_COST = 4.63 * M;
/**
 * @constant RAPIDFIRE_DURATION_WORKSHOP - Workshop Rapid Fire Duration upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.RAPIDFIRE_DURATION_WORKSHOP = upgrade('Rapid Fire Duration', exports.BASE_RAPIDFIRE_DURATION_MIN, exports.BASE_RAPIDFIRE_DURATION_MAX, exports.BASE_RAPIDFIRE_DURATION_QUANTITY, exports.BASE_RAPIDFIRE_DURATION_COST);
exports.BASE_BOUNCE_SHOT_CHANCE_MIN = 0;
exports.BASE_BOUNCE_SHOT_CHANCE_MAX = 68;
exports.BASE_BOUNCE_SHOT_CHANCE_QUANTITY = 85;
exports.BASE_BOUNCE_SHOT_CHANCE_COST = 3.23 * M;
/**
 * @constant BOUNCE_SHOT_CHANCE_WORKSHOP - Workshop Bounce Shot Chance upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.BOUNCE_SHOT_CHANCE_WORKSHOP = upgrade('Bounce Shot Chance', exports.BASE_BOUNCE_SHOT_CHANCE_MIN, exports.BASE_BOUNCE_SHOT_CHANCE_MAX, exports.BASE_BOUNCE_SHOT_CHANCE_QUANTITY, exports.BASE_BOUNCE_SHOT_CHANCE_COST);
exports.BASE_BOUNCE_SHOT_TARGETS_MIN = 1;
exports.BASE_BOUNCE_SHOT_TARGETS_MAX = 8;
exports.BASE_BOUNCE_SHOT_TARGETS_QUANTITY = 7;
exports.BASE_BOUNCE_SHOT_TARGETS_COST = 970.7 * K;
/**
 * @constant BOUNCE_SHOT_TARGETS_WORKSHOP - Workshop Bounce Shot Targets upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.BOUNCE_SHOT_TARGETS_WORKSHOP = upgrade('Bounce Shot Targets', exports.BASE_BOUNCE_SHOT_TARGETS_MIN, exports.BASE_BOUNCE_SHOT_TARGETS_MAX, exports.BASE_BOUNCE_SHOT_TARGETS_QUANTITY, exports.BASE_BOUNCE_SHOT_TARGETS_COST);
exports.BASE_BOUNCE_SHOT_RANGE_MIN = 0;
exports.BASE_BOUNCE_SHOT_RANGE_MAX = 8;
exports.BASE_BOUNCE_SHOT_RANGE_QUANTITY = 60;
exports.BASE_BOUNCE_SHOT_RANGE_COST = 3.81 * T;
/**
 * @constant BOUNCE_SHOT_RANGE_WORKSHOP - Workshop Bounce Shot Range upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.BOUNCE_SHOT_RANGE_WORKSHOP = upgrade('Bounce Shot Range', exports.BASE_BOUNCE_SHOT_RANGE_MIN, exports.BASE_BOUNCE_SHOT_RANGE_MAX, exports.BASE_BOUNCE_SHOT_RANGE_QUANTITY, exports.BASE_BOUNCE_SHOT_RANGE_COST);
exports.BASE_SCC_MIN = 0;
exports.BASE_SCC_MAX = 20;
exports.BASE_SCC_QUANTITY = 100;
exports.BASE_SCC_COST = 5.63 * T;
/**
 * @constant SCC_WORKSHOP - Workshop Super Crit Chance upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.SCC_WORKSHOP = upgrade('Super Crit Chance', exports.BASE_SCC_MIN, exports.BASE_SCC_MAX, exports.BASE_SCC_QUANTITY, exports.BASE_SCC_COST);
exports.BASE_SCM_MIN = 1.2;
exports.BASE_SCM_MAX = 13.2;
exports.BASE_SCM_QUANTITY = 120;
exports.BASE_SCM_COST = 214.5 * T;
/**
 * @constant SCM_WORKSHOP - Workshop Super Crit Mult upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.SCM_WORKSHOP = upgrade('Super Crit Mult', exports.BASE_SCM_MIN, exports.BASE_SCM_MAX, exports.BASE_SCM_QUANTITY, exports.BASE_SCM_COST);
exports.BASE_REND_CHANCE_MIN = 0.1;
exports.BASE_REND_CHANCE_MAX = 30;
exports.BASE_REND_CHANCE_QUANTITY = 200;
exports.BASE_REND_CHANCE_COST = 418.97 * QUAD;
/**
 * @constant REND_CHANCE_WORKSHOP - Workshop Rend Armor Chance upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.REND_CHANCE_WORKSHOP = upgrade('Rend Armor Chance', exports.BASE_REND_CHANCE_MIN, exports.BASE_REND_CHANCE_MAX, exports.BASE_REND_CHANCE_QUANTITY, exports.BASE_REND_CHANCE_COST);
exports.BASE_REND_MULT_MIN = 0.1;
exports.BASE_REND_MULT_MAX = 30;
exports.BASE_REND_MULT_QUANTITY = 299;
exports.BASE_REND_MULT_COST = 15.34 * QUINT;
/**
 * @constant REND_MULT_WORKSHOP - Workshop Rend Armor Mult upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.REND_MULT_WORKSHOP = upgrade('Rend Armor Mult', exports.BASE_REND_MULT_MIN, exports.BASE_REND_MULT_MAX, exports.BASE_REND_MULT_QUANTITY, exports.BASE_REND_MULT_COST);
/**
 * @constant BASE_REND_CAP_MAX - Rend Armor Mult Cap with no labs applied
 */
exports.BASE_REND_CAP_MAX = 800;
/**
 * @constant ATTACK_UPGRADES - Workshop Attack upgrades mapping their English name to their config objects
 */
exports.ATTACK_UPGRADES = Object.freeze({
    [exports.DAMAGE_WORKSHOP.name]: exports.DAMAGE_WORKSHOP,
    [exports.ASPD_WORKSHOP.name]: exports.ASPD_WORKSHOP,
    [exports.CRIT_CHANCE_WORKSHOP.name]: exports.CRIT_CHANCE_WORKSHOP,
    [exports.CRIT_FACTOR_WORKSHOP.name]: exports.CRIT_FACTOR_WORKSHOP,
    [exports.RANGE_WORKSHOP.name]: exports.RANGE_WORKSHOP,
    [exports.DPM_WORKSHOP.name]: exports.DPM_WORKSHOP,
    [exports.MULTISHOT_CHANCE_WORKSHOP.name]: exports.MULTISHOT_CHANCE_WORKSHOP,
    [exports.MULTISHOT_TARGETS_WORKSHOP.name]: exports.MULTISHOT_TARGETS_WORKSHOP,
    [exports.RAPIDFIRE_CHANCE_WORKSHOP.name]: exports.RAPIDFIRE_CHANCE_WORKSHOP,
    [exports.RAPIDFIRE_DURATION_WORKSHOP.name]: exports.RAPIDFIRE_DURATION_WORKSHOP,
    [exports.BOUNCE_SHOT_CHANCE_WORKSHOP.name]: exports.BOUNCE_SHOT_CHANCE_WORKSHOP,
    [exports.BOUNCE_SHOT_TARGETS_WORKSHOP.name]: exports.BOUNCE_SHOT_TARGETS_WORKSHOP,
    [exports.BOUNCE_SHOT_RANGE_WORKSHOP.name]: exports.BOUNCE_SHOT_RANGE_WORKSHOP,
    [exports.SCC_WORKSHOP.name]: exports.SCC_WORKSHOP,
    [exports.SCM_WORKSHOP.name]: exports.SCM_WORKSHOP,
    [exports.REND_CHANCE_WORKSHOP.name]: exports.REND_CHANCE_WORKSHOP,
    [exports.REND_MULT_WORKSHOP.name]: exports.REND_MULT_WORKSHOP,
});
// Defense Tab
exports.BASE_HP_MIN = 1;
exports.BASE_HP_MAX = 912646158.329498;
exports.BASE_HP_QUANTITY = 5000;
exports.BASE_HP_COST = 1.23 * T;
/**
 * @constant HP_WORKSHOP - Workshop Health upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.HP_WORKSHOP = upgrade('Health', exports.BASE_HP_MIN, exports.BASE_HP_MAX, exports.BASE_HP_QUANTITY, exports.BASE_HP_COST);
exports.BASE_REGEN_MIN = 1;
exports.BASE_REGEN_MAX = 523233008.7;
exports.BASE_REGEN_QUANTITY = 5000;
exports.BASE_REGEN_COST = 1.23 * T;
/**
 * @constant REGEN_WORKSHOP - Workshop Health Regen upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.REGEN_WORKSHOP = upgrade('Health Regen', exports.BASE_REGEN_MIN, exports.BASE_REGEN_MAX, exports.BASE_REGEN_QUANTITY, exports.BASE_REGEN_COST);
exports.BASE_DEF_PERCENT_MIN = 0;
exports.BASE_DEF_PERCENT_MAX = 49.5;
exports.BASE_DEF_PERCENT_QUANTITY = 99;
exports.BASE_DEF_PERCENT_COST = 2.77 * M;
/**
 * @constant DEF_PERCENT_WORKSHOP - Workshop Defense % upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.DEF_PERCENT_WORKSHOP = upgrade('Defense Percent', exports.BASE_DEF_PERCENT_MIN, exports.BASE_DEF_PERCENT_MAX, exports.BASE_DEF_PERCENT_QUANTITY, exports.BASE_DEF_PERCENT_COST);
exports.BASE_DEF_ABSOLUTE_MIN = 0;
exports.BASE_DEF_ABSOLUTE_MAX = 80214388.0521576;
exports.BASE_DEF_ABSOLUTE_QUANTITY = 5000;
exports.BASE_DEF_ABSOLUTE_COST = 1.23 * T;
/**
 * @constant DEF_ABSOLUTE_WORKSHOP - Workshop Defense Absolute upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.DEF_ABSOLUTE_WORKSHOP = upgrade('Defense Absolute', exports.BASE_DEF_ABSOLUTE_MIN, exports.BASE_DEF_ABSOLUTE_MAX, exports.BASE_DEF_ABSOLUTE_QUANTITY, exports.BASE_DEF_ABSOLUTE_COST);
exports.BASE_THORN_DAMAGE_MIN = 0;
exports.BASE_THORN_DAMAGE_MAX = 99;
exports.BASE_THORN_DAMAGE_QUANTITY = 99;
exports.BASE_THORN_DAMAGE_COST = 2.33 * M;
/**
 * @constant THORN_DAMAGE_WORKSHOP - Workshop Thorn Damage upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.THORN_DAMAGE_WORKSHOP = upgrade('Thorns', exports.BASE_THORN_DAMAGE_MIN, exports.BASE_THORN_DAMAGE_MAX, exports.BASE_THORN_DAMAGE_QUANTITY, exports.BASE_THORN_DAMAGE_COST);
exports.BASE_LIFESTEAL_MIN = 0;
exports.BASE_LIFESTEAL_MAX = 4.46;
exports.BASE_LIFESTEAL_QUANTITY = 80;
exports.BASE_LIFESTEAL_COST = 1.48 * M;
/**
 * @constant LIFESTEAL_WORKSHOP - Workshop Lifesteal upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.LIFESTEAL_WORKSHOP = upgrade('Lifesteal', exports.BASE_LIFESTEAL_MIN, exports.BASE_LIFESTEAL_MAX, exports.BASE_LIFESTEAL_QUANTITY, exports.BASE_LIFESTEAL_COST);
exports.BASE_KNOCKBACK_CHANCE_MIN = 0;
exports.BASE_KNOCKBACK_CHANCE_MAX = 80;
exports.BASE_KNOCKBACK_CHANCE_QUANTITY = 80;
exports.BASE_KNOCKBACK_CHANCE_COST = 1.6 * M;
/**
 * @constant KNOCKBACK_CHANCE_WORKSHOP - Workshop Knockback Chance upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.KNOCKBACK_CHANCE_WORKSHOP = upgrade('Knockback Chance', exports.BASE_KNOCKBACK_CHANCE_MIN, exports.BASE_KNOCKBACK_CHANCE_MAX, exports.BASE_KNOCKBACK_CHANCE_QUANTITY, exports.BASE_KNOCKBACK_CHANCE_COST);
exports.BASE_KNOCKBACK_FORCE_MIN = 0.4;
exports.BASE_KNOCKBACK_FORCE_MAX = 6.08;
exports.BASE_KNOCKBACK_FORCE_QUANTITY = 40;
exports.BASE_KNOCKBACK_FORCE_COST = 184.33 * K;
/**
 * @constant KNOCKBACK_FORCE_WORKSHOP - Workshop Knockback Force upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.KNOCKBACK_FORCE_WORKSHOP = upgrade('Knockback Force', exports.BASE_KNOCKBACK_FORCE_MIN, exports.BASE_KNOCKBACK_FORCE_MAX, exports.BASE_KNOCKBACK_FORCE_QUANTITY, exports.BASE_KNOCKBACK_FORCE_COST);
exports.BASE_ORB_SPEED_MIN = 0.4;
exports.BASE_ORB_SPEED_MAX = 6.1;
exports.BASE_ORB_SPEED_QUANTITY = 38;
exports.BASE_ORB_SPEED_COST = 342.98 * K;
/**
 * @constant ORB_SPEED_WORKSHOP - Workshop Orb Speed upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.ORB_SPEED_WORKSHOP = upgrade('Orb Speed', exports.BASE_ORB_SPEED_MIN, exports.BASE_ORB_SPEED_MAX, exports.BASE_ORB_SPEED_QUANTITY, exports.BASE_ORB_SPEED_COST);
exports.BASE_ORB_QUANTITY_MIN = 0;
exports.BASE_ORB_QUANTITY_MAX = 4;
exports.BASE_ORB_QUANTITY_QUANTITY = 4;
exports.BASE_ORB_QUANTITY_COST = 493.0 * K;
/**
 * @constant ORB_QUANTITY_WORKSHOP - Workshop Orb Quantity upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.ORB_QUANTITY_WORKSHOP = upgrade('Orbs', exports.BASE_ORB_QUANTITY_MIN, exports.BASE_ORB_QUANTITY_MAX, exports.BASE_ORB_QUANTITY_QUANTITY, exports.BASE_ORB_QUANTITY_COST);
/**
 * @constant WORKSHOP_ORB_DISTANCE - How far away workshop orbs supposedly rotate, in "meters"
 */
exports.WORKSHOP_ORB_DISTANCE = 75;
exports.BASE_SHOCKWAVE_SIZE_MIN = 0.6;
exports.BASE_SHOCKWAVE_SIZE_MAX = 2.35;
exports.BASE_SHOCKWAVE_SIZE_QUANTITY = 35;
exports.BASE_SHOCKWAVE_SIZE_COST = 600.13 * K;
/**
 * @constant SHOCKWAVE_SIZE_WORKSHOP - Workshop Shockwave Size upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.SHOCKWAVE_SIZE_WORKSHOP = upgrade('Shockwave Size', exports.BASE_SHOCKWAVE_SIZE_MIN, exports.BASE_SHOCKWAVE_SIZE_MAX, exports.BASE_SHOCKWAVE_SIZE_QUANTITY, exports.BASE_SHOCKWAVE_SIZE_COST);
exports.BASE_SHOCKWAVE_FREQUENCY_MIN = 20;
exports.BASE_SHOCKWAVE_FREQUENCY_MAX = 14;
exports.BASE_SHOCKWAVE_FREQUENCY_QUANTITY = 40;
exports.BASE_SHOCKWAVE_FREQUENCY_COST = 973.74 * K;
/**
 * @constant SHOCKWAVE_FREQUENCY_WORKSHOP - Workshop Shockwave Frequency upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.SHOCKWAVE_FREQUENCY_WORKSHOP = upgrade('Shockwave Frequency', exports.BASE_SHOCKWAVE_FREQUENCY_MIN, exports.BASE_SHOCKWAVE_FREQUENCY_MAX, exports.BASE_SHOCKWAVE_FREQUENCY_QUANTITY, exports.BASE_SHOCKWAVE_FREQUENCY_COST);
exports.BASE_LAND_MINE_CHANCE_MIN = 0;
exports.BASE_LAND_MINE_CHANCE_MAX = 30;
exports.BASE_LAND_MINE_CHANCE_QUANTITY = 50;
exports.BASE_LAND_MINE_CHANCE_COST = 15.46 * M;
/**
 * @constant LAND_MINE_CHANCE_WORKSHOP - Workshop Land Mine Chance upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.LAND_MINE_CHANCE_WORKSHOP = upgrade('Land Mine Chance', exports.BASE_LAND_MINE_CHANCE_MIN, exports.BASE_LAND_MINE_CHANCE_MAX, exports.BASE_LAND_MINE_CHANCE_QUANTITY, exports.BASE_LAND_MINE_CHANCE_COST);
exports.BASE_LAND_MINE_DAMAGE_MIN = 100;
exports.BASE_LAND_MINE_DAMAGE_MAX = 2100;
exports.BASE_LAND_MINE_DAMAGE_QUANTITY = 200;
exports.BASE_LAND_MINE_DAMAGE_COST = 2.45 * QUAD;
/**
 * @constant LAND_MINE_DAMAGE_WORKSHOP - Workshop Land Mine Damage upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.LAND_MINE_DAMAGE_WORKSHOP = upgrade('Land Mine Damage', exports.BASE_LAND_MINE_DAMAGE_MIN, exports.BASE_LAND_MINE_DAMAGE_MAX, exports.BASE_LAND_MINE_DAMAGE_QUANTITY, exports.BASE_LAND_MINE_DAMAGE_COST);
exports.BASE_LAND_MINE_RADIUS_MIN = 0.5;
exports.BASE_LAND_MINE_RADIUS_MAX = 1.5;
exports.BASE_LAND_MINE_RADIUS_QUANTITY = 50;
exports.BASE_LAND_MINE_RADIUS_COST = 77.52 * B;
/**
 * @constant LAND_MINE_RADIUS_WORKSHOP - Workshop Land Mine Radius upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.LAND_MINE_RADIUS_WORKSHOP = upgrade('Land Mine Radius', exports.BASE_LAND_MINE_RADIUS_MIN, exports.BASE_LAND_MINE_RADIUS_MAX, exports.BASE_LAND_MINE_RADIUS_QUANTITY, exports.BASE_LAND_MINE_RADIUS_COST);
exports.BASE_DEATH_DEFY_MIN = 0;
exports.BASE_DEATH_DEFY_MAX = 30;
exports.BASE_DEATH_DEFY_QUANTITY = 75;
exports.BASE_DEATH_DEFY_COST = 1.72 * B;
/**
 * @constant DEATH_DEFY_WORKSHOP -  Workshop Death Defy upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.DEATH_DEFY_WORKSHOP = upgrade('Death Defy', exports.BASE_DEATH_DEFY_MIN, exports.BASE_DEATH_DEFY_MAX, exports.BASE_DEATH_DEFY_QUANTITY, exports.BASE_DEATH_DEFY_COST);
exports.BASE_WALL_HEALTH_MIN = 20;
exports.BASE_WALL_HEALTH_MAX = 200;
exports.BASE_WALL_HEALTH_QUANTITY = 1800;
exports.BASE_WALL_HEALTH_COST = 14.59 * QUAD;
/**
 * @constant WALL_HEALTH_WORKSHOP - Workshop Wall Health upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.WALL_HEALTH_WORKSHOP = upgrade('Wall Health', exports.BASE_WALL_HEALTH_MIN, exports.BASE_WALL_HEALTH_MAX, exports.BASE_WALL_HEALTH_QUANTITY, exports.BASE_WALL_HEALTH_COST);
exports.BASE_WALL_REBUILD_MIN = 1200;
exports.BASE_WALL_REBUILD_MAX = 600;
exports.BASE_WALL_REBUILD_QUANTITY = 300;
exports.BASE_WALL_REBUILD_COST = 40.37 * T;
/**
 * @constant WALL_REBUILD_WORKSHOP - Workshop Wall Rebuild upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.WALL_REBUILD_WORKSHOP = upgrade('Wall Rebuild', exports.BASE_WALL_REBUILD_MIN, exports.BASE_WALL_REBUILD_MAX, exports.BASE_WALL_REBUILD_QUANTITY, exports.BASE_WALL_REBUILD_COST);
/**
 * @constant DEFENSE_UPGRADES -  Workshop Defense upgrades mapping their English name to their config objects
 */
exports.DEFENSE_UPGRADES = Object.freeze({
    [exports.HP_WORKSHOP.name]: exports.HP_WORKSHOP,
    [exports.REGEN_WORKSHOP.name]: exports.REGEN_WORKSHOP,
    [exports.DEF_PERCENT_WORKSHOP.name]: exports.DEF_PERCENT_WORKSHOP,
    [exports.DEF_ABSOLUTE_WORKSHOP.name]: exports.DEF_ABSOLUTE_WORKSHOP,
    [exports.THORN_DAMAGE_WORKSHOP.name]: exports.THORN_DAMAGE_WORKSHOP,
    [exports.LIFESTEAL_WORKSHOP.name]: exports.LIFESTEAL_WORKSHOP,
    [exports.KNOCKBACK_CHANCE_WORKSHOP.name]: exports.KNOCKBACK_CHANCE_WORKSHOP,
    [exports.KNOCKBACK_FORCE_WORKSHOP.name]: exports.KNOCKBACK_FORCE_WORKSHOP,
    [exports.ORB_SPEED_WORKSHOP.name]: exports.ORB_SPEED_WORKSHOP,
    [exports.ORB_QUANTITY_WORKSHOP.name]: exports.ORB_QUANTITY_WORKSHOP,
    [exports.SHOCKWAVE_SIZE_WORKSHOP.name]: exports.SHOCKWAVE_SIZE_WORKSHOP,
    [exports.SHOCKWAVE_FREQUENCY_WORKSHOP.name]: exports.SHOCKWAVE_FREQUENCY_WORKSHOP,
    [exports.LAND_MINE_CHANCE_WORKSHOP.name]: exports.LAND_MINE_CHANCE_WORKSHOP,
    [exports.LAND_MINE_DAMAGE_WORKSHOP.name]: exports.LAND_MINE_DAMAGE_WORKSHOP,
    [exports.LAND_MINE_RADIUS_WORKSHOP.name]: exports.LAND_MINE_RADIUS_WORKSHOP,
    [exports.DEATH_DEFY_WORKSHOP.name]: exports.DEATH_DEFY_WORKSHOP,
    [exports.WALL_HEALTH_WORKSHOP.name]: exports.WALL_HEALTH_WORKSHOP,
    [exports.WALL_REBUILD_WORKSHOP.name]: exports.WALL_REBUILD_WORKSHOP,
});
// Utility Tab
exports.BASE_CASH_BONUS_MIN = 1;
exports.BASE_CASH_BONUS_MAX = 2.49;
exports.BASE_CASH_BONUS_QUANTITY = 149;
exports.BASE_CASH_BONUS_COST = 14.82 * M;
/**
 * @constant CASH_BONUS_WORKSHOP - Workshop Cash Bonus upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.CASH_BONUS_WORKSHOP = upgrade('Cash Bonus', exports.BASE_CASH_BONUS_MIN, exports.BASE_CASH_BONUS_MAX, exports.BASE_CASH_BONUS_QUANTITY, exports.BASE_CASH_BONUS_COST);
exports.BASE_CASH_PER_WAVE_MIN = 0;
exports.BASE_CASH_PER_WAVE_MAX = 596;
exports.BASE_CASH_PER_WAVE_QUANTITY = 149;
exports.BASE_CASH_PER_WAVE_COST = 14.82 * M;
/**
 * @constant CASH_PER_WAVE_WORKSHOP - Workshop Cash / Wave upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.CASH_PER_WAVE_WORKSHOP = upgrade('Cash / Wave', exports.BASE_CASH_PER_WAVE_MIN, exports.BASE_CASH_PER_WAVE_MAX, exports.BASE_CASH_PER_WAVE_QUANTITY, exports.BASE_CASH_PER_WAVE_COST);
exports.BASE_COINS_PER_KILL_MIN = 1;
exports.BASE_COINS_PER_KILL_MAX = 2.49;
exports.BASE_COINS_PER_KILL_QUANTITY = 149;
exports.BASE_COINS_PER_KILL_COST = 19.47 * M;
/**
 * @constant COINS_PER_KILL_WORKSHOP - Workshop Coins / Kill upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.COINS_PER_KILL_WORKSHOP = upgrade('Coins / Kill Bonus', exports.BASE_COINS_PER_KILL_MIN, exports.BASE_COINS_PER_KILL_MAX, exports.BASE_COINS_PER_KILL_QUANTITY, exports.BASE_COINS_PER_KILL_COST);
exports.BASE_COINS_PER_WAVE_MIN = 1;
exports.BASE_COINS_PER_WAVE_MAX = 150;
exports.BASE_COINS_PER_WAVE_QUANTITY = 149;
exports.BASE_COINS_PER_WAVE_COST = 19.47 * M;
/**
 * @constant COINS_PER_WAVE_WORKSHOP - Workshop Coins / Wave upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.COINS_PER_WAVE_WORKSHOP = upgrade('Coins / Wave', exports.BASE_COINS_PER_WAVE_MIN, exports.BASE_COINS_PER_WAVE_MAX, exports.BASE_COINS_PER_WAVE_QUANTITY, exports.BASE_COINS_PER_WAVE_COST);
exports.BASE_FREE_ATTACK_UPGRADE_MIN = 0;
exports.BASE_FREE_ATTACK_UPGRADE_MAX = 49.5;
exports.BASE_FREE_ATTACK_UPGRADE_QUANTITY = 99;
exports.BASE_FREE_ATTACK_UPGRADE_COST = 4.05 * M;
/**
 * @constant FREE_ATTACK_UPGRADE_WORKSHOP - Workshop Free Attack Upgrade upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.FREE_ATTACK_UPGRADE_WORKSHOP = upgrade('Free Attack Upgrade', exports.BASE_FREE_ATTACK_UPGRADE_MIN, exports.BASE_FREE_ATTACK_UPGRADE_MAX, exports.BASE_FREE_ATTACK_UPGRADE_QUANTITY, exports.BASE_FREE_ATTACK_UPGRADE_COST);
exports.BASE_FREE_DEFENSE_UPGRADE_MIN = 0;
exports.BASE_FREE_DEFENSE_UPGRADE_MAX = 49.5;
exports.BASE_FREE_DEFENSE_UPGRADE_QUANTITY = 99;
exports.BASE_FREE_DEFENSE_UPGRADE_COST = 4.05 * M;
/**
 * @constant FREE_DEFENSE_UPGRADE_WORKSHOP - Workshop Free Defense Upgrade upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.FREE_DEFENSE_UPGRADE_WORKSHOP = upgrade('Free Defense Upgrade', exports.BASE_FREE_DEFENSE_UPGRADE_MIN, exports.BASE_FREE_DEFENSE_UPGRADE_MAX, exports.BASE_FREE_DEFENSE_UPGRADE_QUANTITY, exports.BASE_FREE_DEFENSE_UPGRADE_COST);
exports.BASE_FREE_UTILITY_UPGRADE_MIN = 0;
exports.BASE_FREE_UTILITY_UPGRADE_MAX = 49.5;
exports.BASE_FREE_UTILITY_UPGRADE_QUANTITY = 99;
exports.BASE_FREE_UTILITY_UPGRADE_COST = 4.05 * M;
/**
 * @constant FREE_UTILITY_UPGRADE_WORKSHOP - Workshop Free Utility Upgrade upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.FREE_UTILITY_UPGRADE_WORKSHOP = upgrade('Free Utility Upgrade', exports.BASE_FREE_UTILITY_UPGRADE_MIN, exports.BASE_FREE_UTILITY_UPGRADE_MAX, exports.BASE_FREE_UTILITY_UPGRADE_QUANTITY, exports.BASE_FREE_UTILITY_UPGRADE_COST);
exports.BASE_INTEREST_MIN = 0;
exports.BASE_INTEREST_MAX = 5.94;
exports.BASE_INTEREST_QUANTITY = 99;
exports.BASE_INTEREST_COST = 7.36 * M;
/**
 * @constant INTEREST_WORKSHOP - Workshop Interest / Wave upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.INTEREST_WORKSHOP = upgrade('Interest / Wave', exports.BASE_INTEREST_MIN, exports.BASE_INTEREST_MAX, exports.BASE_INTEREST_QUANTITY, exports.BASE_INTEREST_COST);
exports.BASE_RECOVERY_PACKAGE_AMOUNT_MIN = 14;
exports.BASE_RECOVERY_PACKAGE_AMOUNT_MAX = 38;
exports.BASE_RECOVERY_PACKAGE_AMOUNT_QUANTITY = 60;
exports.BASE_RECOVERY_PACKAGE_AMOUNT_COST = 321.28 * M;
/**
 * @constant RECOVERY_PACKAGE_AMOUNT_WORKSHOP - Workshop Recovery Amount upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.RECOVERY_PACKAGE_AMOUNT_WORKSHOP = upgrade('Recovery Amount', exports.BASE_RECOVERY_PACKAGE_AMOUNT_MIN, exports.BASE_RECOVERY_PACKAGE_AMOUNT_MAX, exports.BASE_RECOVERY_PACKAGE_AMOUNT_QUANTITY, exports.BASE_RECOVERY_PACKAGE_AMOUNT_COST);
exports.BASE_RECOVERY_PACKAGE_MAX_MIN = 1.5;
exports.BASE_RECOVERY_PACKAGE_MAX_MAX = 3;
exports.BASE_RECOVERY_PACKAGE_MAX_QUANTITY = 50;
exports.BASE_RECOVERY_PACKAGE_MAX_COST = 130.57 * M;
/**
 * @constant RECOVERY_PACKAGE_MAX_WORKSHOP - Workshop Max Recovery upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.RECOVERY_PACKAGE_MAX_WORKSHOP = upgrade('Max Recovery', exports.BASE_RECOVERY_PACKAGE_MAX_MIN, exports.BASE_RECOVERY_PACKAGE_MAX_MAX, exports.BASE_RECOVERY_PACKAGE_MAX_QUANTITY, exports.BASE_RECOVERY_PACKAGE_MAX_COST);
exports.BASE_RECOVERY_PACKAGE_CHANCE_MIN = 6;
exports.BASE_RECOVERY_PACKAGE_CHANCE_MAX = 30;
exports.BASE_RECOVERY_PACKAGE_CHANCE_QUANTITY = 60;
exports.BASE_RECOVERY_PACKAGE_CHANCE_COST = 321.28 * M;
/**
 * @constant RECOVERY_PACKAGE_CHANCE_WORKSHOP - Workshop Package Chance upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.RECOVERY_PACKAGE_CHANCE_WORKSHOP = upgrade('Package Chance', exports.BASE_RECOVERY_PACKAGE_CHANCE_MIN, exports.BASE_RECOVERY_PACKAGE_CHANCE_MAX, exports.BASE_RECOVERY_PACKAGE_CHANCE_QUANTITY, exports.BASE_RECOVERY_PACKAGE_CHANCE_COST);
exports.BASE_ENEMY_ATTACK_LEVEL_SKIP_MIN = 0.05;
exports.BASE_ENEMY_ATTACK_LEVEL_SKIP_MAX = 35;
exports.BASE_ENEMY_ATTACK_LEVEL_SKIP_QUANTITY = 699;
exports.BASE_ENEMY_ATTACK_LEVEL_SKIP_COST = 123.43 * QUINT;
/**
 * @constant ENEMY_ATTACK_LEVEL_SKIP_WORKSHOP - Workshop Enemy Attack Level Skip upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.ENEMY_ATTACK_LEVEL_SKIP_WORKSHOP = upgrade('Enemy Attack Level Skip', exports.BASE_ENEMY_ATTACK_LEVEL_SKIP_MIN, exports.BASE_ENEMY_ATTACK_LEVEL_SKIP_MAX, exports.BASE_ENEMY_ATTACK_LEVEL_SKIP_QUANTITY, exports.BASE_ENEMY_ATTACK_LEVEL_SKIP_COST);
exports.BASE_ENEMY_HEALTH_LEVEL_SKIP_MIN = 0.05;
exports.BASE_ENEMY_HEALTH_LEVEL_SKIP_MAX = 35;
exports.BASE_ENEMY_HEALTH_LEVEL_SKIP_QUANTITY = 699;
exports.BASE_ENEMY_HEALTH_LEVEL_SKIP_COST = 123.43 * QUINT;
/**
 * @constant ENEMY_HEALTH_LEVEL_SKIP_WORKSHOP - Workshop Enemy Health Level Skip upgrade { name, min, max, quantity, and cost } with no modifiers or discounts
 */
exports.ENEMY_HEALTH_LEVEL_SKIP_WORKSHOP = upgrade('Enemy Health Level Skip', exports.BASE_ENEMY_HEALTH_LEVEL_SKIP_MIN, exports.BASE_ENEMY_HEALTH_LEVEL_SKIP_MAX, exports.BASE_ENEMY_HEALTH_LEVEL_SKIP_QUANTITY, exports.BASE_ENEMY_HEALTH_LEVEL_SKIP_COST);
/**
 * @constant UTILITY_UPGRADES - Workshop Utility upgrades mapping their English name to their config objects
 */
exports.UTILITY_UPGRADES = Object.freeze({
    [exports.CASH_BONUS_WORKSHOP.name]: exports.CASH_BONUS_WORKSHOP,
    [exports.CASH_PER_WAVE_WORKSHOP.name]: exports.CASH_PER_WAVE_WORKSHOP,
    [exports.COINS_PER_KILL_WORKSHOP.name]: exports.COINS_PER_KILL_WORKSHOP,
    [exports.COINS_PER_WAVE_WORKSHOP.name]: exports.COINS_PER_WAVE_WORKSHOP,
    [exports.FREE_ATTACK_UPGRADE_WORKSHOP.name]: exports.FREE_ATTACK_UPGRADE_WORKSHOP,
    [exports.FREE_DEFENSE_UPGRADE_WORKSHOP.name]: exports.FREE_DEFENSE_UPGRADE_WORKSHOP,
    [exports.FREE_UTILITY_UPGRADE_WORKSHOP.name]: exports.FREE_UTILITY_UPGRADE_WORKSHOP,
    [exports.INTEREST_WORKSHOP.name]: exports.INTEREST_WORKSHOP,
    [exports.RECOVERY_PACKAGE_AMOUNT_WORKSHOP.name]: exports.RECOVERY_PACKAGE_AMOUNT_WORKSHOP,
    [exports.RECOVERY_PACKAGE_MAX_WORKSHOP.name]: exports.RECOVERY_PACKAGE_MAX_WORKSHOP,
    [exports.RECOVERY_PACKAGE_CHANCE_WORKSHOP.name]: exports.RECOVERY_PACKAGE_CHANCE_WORKSHOP,
    [exports.ENEMY_ATTACK_LEVEL_SKIP_WORKSHOP.name]: exports.ENEMY_ATTACK_LEVEL_SKIP_WORKSHOP,
    [exports.ENEMY_HEALTH_LEVEL_SKIP_WORKSHOP.name]: exports.ENEMY_HEALTH_LEVEL_SKIP_WORKSHOP,
});
/**
 * @constant WORKSHOP_UPGRADES - All Workshop upgrades mapping their English name to their config objects
 */
exports.WORKSHOP_UPGRADES = Object.freeze({
    ...exports.ATTACK_UPGRADES,
    ...exports.DEFENSE_UPGRADES,
    ...exports.UTILITY_UPGRADES,
});
/**
 * @constant ATTACK_UNLOCKS - An array of { name: string, cost: number, upgrades: string[] } of workshop unlocks
 *  - The first entry is Default, the ones already unlocked on a fresh respec
 */
exports.ATTACK_UNLOCKS = Object.freeze([
    Object.freeze({
        name: 'Default',
        cost: 0,
        upgrades: Object.freeze([
            exports.DAMAGE_WORKSHOP.name,
            exports.ASPD_WORKSHOP.name,
            exports.CRIT_CHANCE_WORKSHOP.name,
            exports.CRIT_FACTOR_WORKSHOP.name,
        ]),
    }),
    Object.freeze({
        name: 'Range Upgrades',
        cost: 50,
        upgrades: Object.freeze([exports.RANGE_WORKSHOP.name, exports.DPM_WORKSHOP.name]),
    }),
    Object.freeze({
        name: 'Multishot Upgrades',
        cost: 400,
        upgrades: Object.freeze([
            exports.MULTISHOT_CHANCE_WORKSHOP.name,
            exports.MULTISHOT_TARGETS_WORKSHOP.name,
        ]),
    }),
    Object.freeze({
        name: 'Rapid Fire Upgrades',
        cost: 1500,
        upgrades: Object.freeze([
            exports.RAPIDFIRE_CHANCE_WORKSHOP.name,
            exports.RAPIDFIRE_DURATION_WORKSHOP.name,
        ]),
    }),
    Object.freeze({
        name: 'Bounce Shot Upgrades',
        cost: 10 * K,
        upgrades: Object.freeze([
            exports.BOUNCE_SHOT_CHANCE_WORKSHOP.name,
            exports.BOUNCE_SHOT_TARGETS_WORKSHOP.name,
            exports.BOUNCE_SHOT_RANGE_WORKSHOP.name,
        ]),
    }),
    Object.freeze({
        name: 'Super Critical Hits',
        cost: 100 * M,
        upgrades: Object.freeze([exports.SCC_WORKSHOP.name, exports.SCM_WORKSHOP.name]),
    }),
    Object.freeze({
        name: 'Rend Armor',
        cost: 500 * B,
        upgrades: Object.freeze([
            exports.REND_CHANCE_WORKSHOP.name,
            exports.REND_MULT_WORKSHOP.name,
        ]),
    }),
]);
/**
 * @constant DEFENSE_UNLOCKS - An array of { name: string, cost: number, upgrades: string[] } of workshop unlocks
 *  - The first entry is Default, the ones already unlocked on a fresh respec
 */
exports.DEFENSE_UNLOCKS = Object.freeze([
    Object.freeze({
        name: 'Default',
        cost: 0,
        upgrades: Object.freeze([exports.HP_WORKSHOP.name, exports.REGEN_WORKSHOP.name]),
    }),
    Object.freeze({
        name: 'Defense Upgrades',
        cost: 75,
        upgrades: Object.freeze([
            exports.DEF_PERCENT_WORKSHOP.name,
            exports.DEF_ABSOLUTE_WORKSHOP.name,
        ]),
    }),
    Object.freeze({
        name: 'Thorn Upgrades',
        cost: 500,
        upgrades: Object.freeze([exports.THORN_DAMAGE_WORKSHOP.name]),
    }),
    Object.freeze({
        name: 'Lifesteal Upgrades',
        cost: 2 * K,
        upgrades: Object.freeze([exports.LIFESTEAL_WORKSHOP.name]),
    }),
    Object.freeze({
        name: 'Knockback Upgrades',
        cost: 5 * K,
        upgrades: Object.freeze([
            exports.KNOCKBACK_CHANCE_WORKSHOP.name,
            exports.KNOCKBACK_FORCE_WORKSHOP.name,
        ]),
    }),
    Object.freeze({
        name: 'Orbs Upgrades',
        cost: 15 * K,
        upgrades: Object.freeze([
            exports.ORB_SPEED_WORKSHOP.name,
            exports.ORB_QUANTITY_WORKSHOP.name,
        ]),
    }),
    Object.freeze({
        name: 'Shockwave Upgrades',
        cost: 100 * K,
        upgrades: Object.freeze([
            exports.SHOCKWAVE_SIZE_WORKSHOP.name,
            exports.SHOCKWAVE_FREQUENCY_WORKSHOP.name,
        ]),
    }),
    Object.freeze({
        name: 'Land Mine Upgrades',
        cost: 400 * K,
        upgrades: Object.freeze([
            exports.LAND_MINE_DAMAGE_WORKSHOP.name,
            exports.LAND_MINE_CHANCE_WORKSHOP.name,
            exports.LAND_MINE_RADIUS_WORKSHOP.name,
        ]),
    }),
    Object.freeze({
        name: 'Death Defy',
        cost: 1.5 * M,
        upgrades: Object.freeze([exports.DEATH_DEFY_WORKSHOP.name]),
    }),
    Object.freeze({
        name: 'The Wall',
        cost: 500 * M,
        upgrades: Object.freeze([
            exports.WALL_HEALTH_WORKSHOP.name,
            exports.WALL_REBUILD_WORKSHOP.name,
        ]),
    }),
]);
/**
 * @constant UTILITY_UNLOCKS - An array of { name: string, cost: number, upgrades: string[] } of workshop unlocks
 *  - The first entry is Default, the ones already unlocked on a fresh respec
 */
exports.UTILITY_UNLOCKS = Object.freeze([
    Object.freeze({
        name: 'Default',
        cost: 0,
        upgrades: Object.freeze([]),
    }),
    Object.freeze({
        name: 'Cash Bonuses',
        cost: 40,
        upgrades: Object.freeze([
            exports.CASH_BONUS_WORKSHOP.name,
            exports.CASH_PER_WAVE_WORKSHOP.name,
        ]),
    }),
    Object.freeze({
        name: 'Coin Bonuses',
        cost: 100,
        upgrades: Object.freeze([
            exports.COINS_PER_KILL_WORKSHOP.name,
            exports.COINS_PER_WAVE_WORKSHOP.name,
        ]),
    }),
    Object.freeze({
        name: 'Upgrade Chances',
        cost: 800,
        upgrades: Object.freeze([
            exports.FREE_ATTACK_UPGRADE_WORKSHOP.name,
            exports.FREE_DEFENSE_UPGRADE_WORKSHOP.name,
            exports.FREE_UTILITY_UPGRADE_WORKSHOP.name,
        ]),
    }),
    Object.freeze({
        name: 'Interest / Wave',
        cost: 5 * K,
        upgrades: Object.freeze([exports.INTEREST_WORKSHOP.name]),
    }),
    Object.freeze({
        name: 'Recovery Package',
        cost: 1.5 * M,
        upgrades: Object.freeze([
            exports.RECOVERY_PACKAGE_AMOUNT_WORKSHOP.name,
            exports.RECOVERY_PACKAGE_MAX_WORKSHOP.name,
            exports.RECOVERY_PACKAGE_CHANCE_WORKSHOP.name,
        ]),
    }),
    Object.freeze({
        name: 'Enemy Level Skips',
        cost: 1 * B,
        upgrades: Object.freeze([
            exports.ENEMY_ATTACK_LEVEL_SKIP_WORKSHOP.name,
            exports.ENEMY_HEALTH_LEVEL_SKIP_WORKSHOP.name,
        ]),
    }),
]);
/**
 * @constant WORKSHOP_UNLOCKS - an object mapping Attack, Defense, and Utility to their respective unlocks
 */
exports.WORKSHOP_UNLOCKS = Object.freeze({
    Attack: exports.ATTACK_UNLOCKS,
    Defense: exports.DEFENSE_UNLOCKS,
    Utility: exports.UTILITY_UNLOCKS,
});
/**
 * @function maxWorkshopLevel - gets the max level of a workshop
 *
 * @param name - The name of the upgrade
 * @returns The max level of the upgrade
 */
const maxWorkshopLevel = (name) => {
    const levels = Object.keys(exports.WORKSHOP_LEVELS[name] || {});
    return parseInt(levels.at(-1) || '0', 10);
};
exports.maxWorkshopLevel = maxWorkshopLevel;
const percent = (value, places = 2) => `${(0, utils_1.round)(value, places)}%`;
const time = (value, places = 2) => `${(0, utils_1.round)(value, places)}s`;
const distance = (value, places = 2) => `${(0, utils_1.round)(value, places)}M`;
const mult = (value, places = 2) => `${(0, utils_1.round)(value, places)}x`;
/**
 * @function formatWorkshopValue - take the name of a workshop, and its actual value (from WORKSHOP_LEVELS), and return the display string for it
 *
 * @param name - string - the name of the workshop
 * @param value - number - the actual value from WORKSHOP_LEVELS
 * @returns string - a nicely formatted string for the value
 */
const formatWorkshopValue = (name, value) => {
    switch (name) {
        case exports.DAMAGE_WORKSHOP.name:
            return (0, utils_1.formatValue)(value);
        case exports.ASPD_WORKSHOP.name:
            return (0, utils_1.roundHundredths)(value);
        case exports.CRIT_CHANCE_WORKSHOP.name:
            return percent(value);
        case exports.CRIT_FACTOR_WORKSHOP.name:
            return mult(value);
        case exports.RANGE_WORKSHOP.name:
            return distance(value * 10);
        case exports.DPM_WORKSHOP.name:
            return percent(value);
        case exports.MULTISHOT_CHANCE_WORKSHOP.name:
            return percent(value);
        case exports.MULTISHOT_TARGETS_WORKSHOP.name:
            return value.toFixed(0);
        case exports.RAPIDFIRE_CHANCE_WORKSHOP.name:
            return percent(value);
        case exports.RAPIDFIRE_DURATION_WORKSHOP.name:
            return time(value);
        case exports.BOUNCE_SHOT_CHANCE_WORKSHOP.name:
            return percent(value);
        case exports.BOUNCE_SHOT_TARGETS_WORKSHOP.name:
            return value.toFixed(0);
        case exports.BOUNCE_SHOT_RANGE_WORKSHOP.name:
            return distance(value);
        case exports.SCC_WORKSHOP.name:
            return percent(value);
        case exports.SCM_WORKSHOP.name:
            return mult(value);
        case exports.REND_CHANCE_WORKSHOP.name:
            return percent(value);
        case exports.REND_MULT_WORKSHOP.name:
            return percent(value * 100);
        case exports.HP_WORKSHOP.name:
            return (0, utils_1.formatValue)(value);
        case exports.REGEN_WORKSHOP.name:
            return (0, utils_1.formatValue)(value);
        case exports.DEF_PERCENT_WORKSHOP.name:
            return percent(value);
        case exports.DEF_ABSOLUTE_WORKSHOP.name:
            return (0, utils_1.formatValue)(value);
        case exports.THORN_DAMAGE_WORKSHOP.name:
            return percent(value, 0);
        case exports.LIFESTEAL_WORKSHOP.name:
            return percent(value);
        case exports.KNOCKBACK_CHANCE_WORKSHOP.name:
            return percent(value);
        case exports.KNOCKBACK_FORCE_WORKSHOP.name:
            return (0, utils_1.roundHundredths)(value);
        case exports.ORB_SPEED_WORKSHOP.name:
            return (0, utils_1.roundHundredths)(value * 10);
        case exports.ORB_QUANTITY_WORKSHOP.name:
            return value.toFixed(0);
        case exports.SHOCKWAVE_SIZE_WORKSHOP.name:
            return (0, utils_1.roundHundredths)(value);
        case exports.SHOCKWAVE_FREQUENCY_WORKSHOP.name:
            return time(value);
        case exports.LAND_MINE_CHANCE_WORKSHOP.name:
            return percent(value);
        case exports.LAND_MINE_DAMAGE_WORKSHOP.name:
            return percent(value);
        case exports.LAND_MINE_RADIUS_WORKSHOP.name:
            return (0, utils_1.roundHundredths)(value);
        case exports.DEATH_DEFY_WORKSHOP.name:
            return percent(value);
        case exports.WALL_HEALTH_WORKSHOP.name:
            return percent(value);
        case exports.WALL_REBUILD_WORKSHOP.name:
            return time(value, 0);
        case exports.CASH_BONUS_WORKSHOP.name:
            return mult(value);
        case exports.CASH_PER_WAVE_WORKSHOP.name:
            return (0, utils_1.formatValue)(value);
        case exports.COINS_PER_KILL_WORKSHOP.name:
            return mult(value);
        case exports.COINS_PER_WAVE_WORKSHOP.name:
            return (0, utils_1.formatValue)(value);
        case exports.FREE_ATTACK_UPGRADE_WORKSHOP.name:
            return percent(value);
        case exports.FREE_DEFENSE_UPGRADE_WORKSHOP.name:
            return percent(value);
        case exports.FREE_UTILITY_UPGRADE_WORKSHOP.name:
            return percent(value);
        case exports.INTEREST_WORKSHOP.name:
            return percent(value);
        case exports.RECOVERY_PACKAGE_AMOUNT_WORKSHOP.name:
            return percent(value * 100);
        case exports.RECOVERY_PACKAGE_MAX_WORKSHOP.name:
            return mult(value);
        case exports.RECOVERY_PACKAGE_CHANCE_WORKSHOP.name:
            return percent(value * 100);
        case exports.ENEMY_ATTACK_LEVEL_SKIP_WORKSHOP.name:
            return percent(value * 100);
        case exports.ENEMY_HEALTH_LEVEL_SKIP_WORKSHOP.name:
            return percent(value * 100);
        default:
            return (0, utils_1.formatValue)(value);
    }
};
exports.formatWorkshopValue = formatWorkshopValue;
